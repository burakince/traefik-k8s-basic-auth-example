---
apiVersion: v1
kind: Namespace
metadata:
  name: example
---
# https://kubernetes.io/docs/concepts/configuration/secret/#basic-authentication-secret
# https://doc.traefik.io/traefik/middlewares/http/basicauth/#users
apiVersion: v1
kind: Secret
metadata:
  name: authsecret
  namespace: example
data:
# user1=$(htpasswd -nb user1 password1) && user2=$(htpasswd -nb user2 password2) && echo -e "${user1}\n${user2}" | base64
  users: dXNlcjE6JGFwcjEkME1Sc29YaXEkSTFJSUd2MzhDcWRYc3BjanVMa3JJLwp1c2VyMjokYXByMSQ3cUlvU1NWSyR5emp4QlZPdFl1ajJKMlphWW5rQ0wwCg==
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: test-auth
  namespace: example
spec:
  basicAuth:
    realm: MyRealm
    removeHeader: true
    secret: authsecret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: example-test-auth@kubernetescrd # NAMESPACE-MIDLLEWARE_NAME@kubernetescrd
  #   cert-manager.io/cluster-issuer: letsencrypt
  name: example-ingress
  namespace: example
spec:
  rules:
    - host: "auth.example.com"
      http:
        paths:
          - backend:
              service:
                name: example-srv
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
---
apiVersion: v1
kind: Service
metadata:
  name: example-srv
  namespace: example
spec:
  selector:
    app: example-app
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment
  namespace: example
spec:
  selector:
    matchLabels:
      app: example-app
  replicas: 1
  template:
    metadata:
      labels:
        app: example-app
        version: "1.21"
    spec:
      containers:
        - name: nginx
          image: nginx:1.21
          ports:
            - containerPort: 80
